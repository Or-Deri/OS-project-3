Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00       92     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const
  0.00      0.00     0.00       72     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const
  0.00      0.00     0.00       57     0.00     0.00  Point* std::__niter_base<Point*>(Point*)
  0.00      0.00     0.00       52     0.00     0.00  std::vector<Point, std::allocator<Point> >::size() const
  0.00      0.00     0.00       48     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&)
  0.00      0.00     0.00       48     0.00     0.00  float& std::forward<float&>(std::remove_reference<float&>::type&)
  0.00      0.00     0.00       42     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00       32     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  0.00      0.00     0.00       30     0.00     0.00  std::vector<Point, std::allocator<Point> >::operator[](unsigned long)
  0.00      0.00     0.00       30     0.00     0.00  Point&& std::forward<Point>(std::remove_reference<Point>::type&)
  0.00      0.00     0.00       29     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator()
  0.00      0.00     0.00       26     0.00     0.00  std::remove_reference<Point&>::type&& std::move<Point&>(Point&)
  0.00      0.00     0.00       24     0.00     0.00  Convex::calculate_distance(Point, Point)
  0.00      0.00     0.00       23     0.00     0.00  std::vector<Point, std::allocator<Point> >::end()
  0.00      0.00     0.00       22     0.00     0.00  Convex::orientation(Point, Point, Point)
  0.00      0.00     0.00       20     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00       19     0.00     0.00  std::vector<Point, std::allocator<Point> >::_S_max_size(std::allocator<Point> const&)
  0.00      0.00     0.00       19     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00       19     0.00     0.00  Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&)
  0.00      0.00     0.00       18     0.00     0.00  bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&)
  0.00      0.00     0.00       18     0.00     0.00  std::vector<Point, std::allocator<Point> >::max_size() const
  0.00      0.00     0.00       18     0.00     0.00  std::vector<Point, std::allocator<Point> >::_S_relocate(Point*, Point*, Point*, std::allocator<Point>&)
  0.00      0.00     0.00       18     0.00     0.00  Point* std::__relocate_a<Point*, Point*, std::allocator<Point> >(Point*, Point*, Point*, std::allocator<Point>&)
  0.00      0.00     0.00       18     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<Point, void>::value, Point*>::type std::__relocate_a_1<Point, Point>(Point*, Point*, Point*, std::allocator<Point>&)
  0.00      0.00     0.00       16     0.00     0.00  bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00       16     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long)
  0.00      0.00     0.00       16     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&)
  0.00      0.00     0.00       14     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++()
  0.00      0.00     0.00       13     0.00     0.00  std::__new_allocator<Point>::deallocate(Point*, unsigned long)
  0.00      0.00     0.00       13     0.00     0.00  std::__new_allocator<Point>::allocate(unsigned long, void const*)
  0.00      0.00     0.00       13     0.00     0.00  std::vector<Point, std::allocator<Point> >::begin()
  0.00      0.00     0.00       13     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator--()
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  0.00      0.00     0.00       12     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long)
  0.00      0.00     0.00       12     0.00     0.00  std::pair<float, float>::pair<float&, float&, true>(float&, float&)
  0.00      0.00     0.00       12     0.00     0.00  std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&)
  0.00      0.00     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator-(long) const
  0.00      0.00     0.00       10     0.00     0.00  std::__new_allocator<Point>::~__new_allocator()
  0.00      0.00     0.00       10     0.00     0.00  std::vector<Point, std::allocator<Point> >::back()
  0.00      0.00     0.00       10     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00        9     0.00     0.00  std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00        9     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size()
  0.00      0.00     0.00        9     0.00     0.00  Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const
  0.00      0.00     0.00        9     0.00     0.00  Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const
  0.00      0.00     0.00        8     0.00     0.00  Convex::add_vx(float, float)
  0.00      0.00     0.00        8     0.00     0.00  Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&)
  0.00      0.00     0.00        8     0.00     0.00  std::vector<Point, std::allocator<Point> >::push_back(Point&&)
  0.00      0.00     0.00        7     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Point*>(Point*, Point*)
  0.00      0.00     0.00        7     0.00     0.00  void std::_Destroy<Point*>(Point*, Point*)
  0.00      0.00     0.00        6     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        6     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        6     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        6     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl_data::_Vector_impl_data()
  0.00      0.00     0.00        6     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::~_Vector_base()
  0.00      0.00     0.00        6     0.00     0.00  void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&)
  0.00      0.00     0.00        6     0.00     0.00  std::vector<Point, std::allocator<Point> >::~vector()
  0.00      0.00     0.00        6     0.00     0.00  bool std::operator< <float, float>(std::pair<float, float> const&, std::pair<float, float> const&)
  0.00      0.00     0.00        5     0.00     0.00  std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&)
  0.00      0.00     0.00        5     0.00     0.00  std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&)
  0.00      0.00     0.00        5     0.00     0.00  std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point const* const&)
  0.00      0.00     0.00        4     0.00     0.00  bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&)
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::base() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator*() const
  0.00      0.00     0.00        4     0.00     0.00  std::deque<Point, std::allocator<Point> >::size() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        4     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_Vector_base()
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator--()
  0.00      0.00     0.00        4     0.00     0.00  std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::reverse_iterator(std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        4     0.00     0.00  std::deque<Point, std::allocator<Point> >::end()
  0.00      0.00     0.00        4     0.00     0.00  std::deque<Point, std::allocator<Point> >::push_back(Point const&)
  0.00      0.00     0.00        4     0.00     0.00  std::vector<Point, std::allocator<Point> >::push_back(Point const&)
  0.00      0.00     0.00        4     0.00     0.00  std::vector<Point, std::allocator<Point> >::vector()
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > std::__miter_base<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        4     0.00     0.00  Point const* std::__niter_base<Point const*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        4     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&&)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&&)
  0.00      0.00     0.00        3     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        3     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        3     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        3     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        3     0.00     0.00  void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&)
  0.00      0.00     0.00        3     0.00     0.00  Point* std::__niter_wrap<Point*>(Point* const&, Point*)
  0.00      0.00     0.00        3     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        3     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&)
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&)
  0.00      0.00     0.00        3     0.00     0.00  Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}::operator()(Point, Point) const
  0.00      0.00     0.00        3     0.00     0.00  Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}::operator()(Point, Point) const
  0.00      0.00     0.00        2     0.00     0.00  Convex::calculate_area()
  0.00      0.00     0.00        2     0.00     0.00  Convex::Convex(int)
  0.00      0.00     0.00        2     0.00     0.00  Convex::~Convex()
  0.00      0.00     0.00        2     0.00     0.00  Convex::get_convex_vx() const
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator+(long) const
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const
  0.00      0.00     0.00        2     0.00     0.00  std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const
  0.00      0.00     0.00        2     0.00     0.00  std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator+(long) const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<Point, std::allocator<Point> >::end() const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<Point, std::allocator<Point> >::begin() const
  0.00      0.00     0.00        2     0.00     0.00  Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point const, Point>(Point const*, Point const*, Point*)
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl(std::allocator<Point> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_M_create_storage(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<Point, std::allocator<Point> >::_Vector_base(unsigned long, std::allocator<Point> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator-=(long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator+=(long)
  0.00      0.00     0.00        2     0.00     0.00  std::__new_allocator<Point*>::~__new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  Point* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  0.00      0.00     0.00        2     0.00     0.00  std::deque<Point, std::allocator<Point> >::back()
  0.00      0.00     0.00        2     0.00     0.00  std::deque<Point, std::allocator<Point> >::begin()
  0.00      0.00     0.00        2     0.00     0.00  std::deque<Point, std::allocator<Point> >::rbegin()
  0.00      0.00     0.00        2     0.00     0.00  std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&)
  0.00      0.00     0.00        2     0.00     0.00  int std::__bit_width<unsigned long>(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        2     0.00     0.00  Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  0.00      0.00     0.00        2     0.00     0.00  int std::__countl_zero<unsigned long>(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  Point* std::__copy_move_a1<false, Point const*, Point*>(Point const*, Point const*, Point*)
  0.00      0.00     0.00        2     0.00     0.00  Point* std::__copy_move_a2<false, Point const*, Point*>(Point const*, Point const*, Point*)
  0.00      0.00     0.00        2     0.00     0.00  Point* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  0.00      0.00     0.00        2     0.00     0.00  Point* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, Point>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, std::allocator<Point>&)
  0.00      0.00     0.00        2     0.00     0.00  std::abs(float)
  0.00      0.00     0.00        2     0.00     0.00  long std::__lg<long>(long)
  0.00      0.00     0.00        2     0.00     0.00  Point* std::copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&)
  0.00      0.00     0.00        2     0.00     0.00  std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long)
  0.00      0.00     0.00        1     0.00     0.00  run_convexHull_deque(Convex&)
  0.00      0.00     0.00        1     0.00     0.00  run_convexHull_vector(Convex&)
  0.00      0.00     0.00        1     0.00     0.00  Convex::findConvexHull_using_deque()
  0.00      0.00     0.00        1     0.00     0.00  Convex::findConvexHull_using_vector()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1})
  0.00      0.00     0.00        1     0.00     0.00  std::vector<Point, std::allocator<Point> >::capacity() const
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base()
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point, Point>(Point*, Point*, Point*)
  0.00      0.00     0.00        1     0.00     0.00  std::numeric_limits<long>::max()
  0.00      0.00     0.00        1     0.00     0.00  std::__new_allocator<Point*>::deallocate(Point**, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::__new_allocator<Point*>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__uninitialized_copy<true>::__uninit_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<Point, std::allocator<Point> >::deque()
  0.00      0.00     0.00        1     0.00     0.00  std::deque<Point, std::allocator<Point> >::~deque()
  0.00      0.00     0.00        1     0.00     0.00  void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<Point, std::allocator<Point> >::_M_erase_at_end(Point*)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<Point, std::allocator<Point> >::_S_check_init_len(unsigned long, std::allocator<Point> const&)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<Point, std::allocator<Point> >::clear()
  0.00      0.00     0.00        1     0.00     0.00  void std::vector<Point, std::allocator<Point> >::assign<std::_Deque_iterator<Point, Point&, Point*>, void>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_a1<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_a1<false, Point*, Point*>(Point*, Point*, Point*)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_a2<false, Point*, Point*>(Point*, Point*, Point*)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_dit<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  0.00      0.00     0.00        1     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::uninitialized_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  0.00      0.00     0.00        1     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__uninitialized_copy_a<std::_Deque_iterator<Point, Point&, Point*>, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*, std::allocator<Point>&)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  0.00      0.00     0.00        1     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1})
  0.00      0.00     0.00        1     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1})
  0.00      0.00     0.00        1     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00       6/92          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       8/92          bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [78]
                0.00    0.00      12/92          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
                0.00    0.00      30/92          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00      36/92          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
[14]     0.0    0.00    0.00      92         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [14]
-----------------------------------------------
                0.00    0.00       1/72          Convex::findConvexHull_using_vector() [152]
                0.00    0.00       1/72          Convex::findConvexHull_using_deque() [151]
                0.00    0.00       6/72          bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [97]
                0.00    0.00       6/72          bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [95]
                0.00    0.00       6/72          bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [98]
                0.00    0.00       6/72          bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [96]
                0.00    0.00       6/72          bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [67]
                0.00    0.00       6/72          bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [66]
                0.00    0.00      10/72          std::vector<Point, std::allocator<Point> >::back() [55]
                0.00    0.00      12/72          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [104]
                0.00    0.00      12/72          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [103]
[15]     0.0    0.00    0.00      72         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
-----------------------------------------------
                0.00    0.00       1/57          Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
                0.00    0.00       2/57          Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [137]
                0.00    0.00      54/57          Point* std::__relocate_a<Point*, Point*, std::allocator<Point> >(Point*, Point*, Point*, std::allocator<Point>&) [36]
[16]     0.0    0.00    0.00      57         Point* std::__niter_base<Point*>(Point*) [16]
-----------------------------------------------
                0.00    0.00       1/52          Convex::findConvexHull_using_deque() [151]
                0.00    0.00       2/52          main [11]
                0.00    0.00       2/52          std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
                0.00    0.00       4/52          Convex::calculate_area() [109]
                0.00    0.00       7/52          Convex::findConvexHull_using_vector() [152]
                0.00    0.00      36/52          std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [57]
[17]     0.0    0.00    0.00      52         std::vector<Point, std::allocator<Point> >::size() const [17]
-----------------------------------------------
                0.00    0.00       2/48          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator+(long) const [113]
                0.00    0.00      10/48          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator-(long) const [53]
                0.00    0.00      13/48          std::vector<Point, std::allocator<Point> >::begin() [45]
                0.00    0.00      23/48          std::vector<Point, std::allocator<Point> >::end() [27]
[18]     0.0    0.00    0.00      48         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&) [18]
-----------------------------------------------
                0.00    0.00      24/48          std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&) [52]
                0.00    0.00      24/48          std::pair<float, float>::pair<float&, float&, true>(float&, float&) [51]
[19]     0.0    0.00    0.00      48         float& std::forward<float&>(std::remove_reference<float&>::type&) [19]
-----------------------------------------------
                0.00    0.00       2/42          std::deque<Point, std::allocator<Point> >::rbegin() [132]
                0.00    0.00       2/42          std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const [116]
                0.00    0.00       2/42          std::deque<Point, std::allocator<Point> >::begin() [131]
                0.00    0.00       2/42          void std::vector<Point, std::allocator<Point> >::assign<std::_Deque_iterator<Point, Point&, Point*>, void>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [188]
                0.00    0.00       2/42          std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [148]
                0.00    0.00       2/42          Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [186]
                0.00    0.00       2/42          Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [206]
                0.00    0.00       2/42          Point* std::__uninitialized_copy_a<std::_Deque_iterator<Point, Point&, Point*>, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*, std::allocator<Point>&) [205]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [135]
                0.00    0.00       2/42          Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
                0.00    0.00       2/42          Point* std::uninitialized_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [202]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [136]
                0.00    0.00       2/42          Point* std::__copy_move_a1<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [194]
                0.00    0.00       2/42          Point* std::__uninitialized_copy<true>::__uninit_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [179]
                0.00    0.00       4/42          std::deque<Point, std::allocator<Point> >::end() [86]
                0.00    0.00       4/42          std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::reverse_iterator(std::_Deque_iterator<Point, Point&, Point*>) [85]
                0.00    0.00       6/42          void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
[20]     0.0    0.00    0.00      42         std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
-----------------------------------------------
                0.00    0.00      32/32          bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [38]
[21]     0.0    0.00    0.00      32         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [21]
-----------------------------------------------
                0.00    0.00       6/30          Convex::findConvexHull_using_deque() [151]
                0.00    0.00       8/30          Convex::findConvexHull_using_vector() [152]
                0.00    0.00      16/30          Convex::calculate_area() [109]
[22]     0.0    0.00    0.00      30         std::vector<Point, std::allocator<Point> >::operator[](unsigned long) [22]
-----------------------------------------------
                0.00    0.00      12/30          Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
                0.00    0.00      18/30          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[23]     0.0    0.00    0.00      30         Point&& std::forward<Point>(std::remove_reference<Point>::type&) [23]
-----------------------------------------------
                0.00    0.00       1/29          Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [186]
                0.00    0.00       2/29          std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
                0.00    0.00       2/29          void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
                0.00    0.00       6/29          std::vector<Point, std::allocator<Point> >::~vector() [72]
                0.00    0.00       6/29          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00      12/29          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[24]     0.0    0.00    0.00      29         std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
-----------------------------------------------
                0.00    0.00       8/26          std::vector<Point, std::allocator<Point> >::push_back(Point&&) [63]
                0.00    0.00       9/26          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [104]
                0.00    0.00       9/26          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [103]
[25]     0.0    0.00    0.00      26         std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [25]
-----------------------------------------------
                0.00    0.00      12/24          Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [60]
                0.00    0.00      12/24          Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [59]
[26]     0.0    0.00    0.00      24         Convex::calculate_distance(Point, Point) [26]
-----------------------------------------------
                0.00    0.00       2/23          Convex::findConvexHull_using_vector() [152]
                0.00    0.00       2/23          Convex::findConvexHull_using_deque() [151]
                0.00    0.00       3/23          std::vector<Point, std::allocator<Point> >::push_back(Point const&) [88]
                0.00    0.00       6/23          Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
                0.00    0.00      10/23          std::vector<Point, std::allocator<Point> >::back() [55]
[27]     0.0    0.00    0.00      23         std::vector<Point, std::allocator<Point> >::end() [27]
                0.00    0.00      23/48          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&) [18]
-----------------------------------------------
                0.00    0.00       2/22          Convex::findConvexHull_using_vector() [152]
                0.00    0.00       2/22          Convex::findConvexHull_using_deque() [151]
                0.00    0.00       9/22          Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [60]
                0.00    0.00       9/22          Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [59]
[28]     0.0    0.00    0.00      22         Convex::orientation(Point, Point, Point) [28]
-----------------------------------------------
                0.00    0.00       2/20          std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
                0.00    0.00      18/20          std::vector<Point, std::allocator<Point> >::max_size() const [34]
[29]     0.0    0.00    0.00      20         std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [29]
-----------------------------------------------
                0.00    0.00       1/19          std::vector<Point, std::allocator<Point> >::_S_check_init_len(unsigned long, std::allocator<Point> const&) [185]
                0.00    0.00      18/19          std::vector<Point, std::allocator<Point> >::max_size() const [34]
[30]     0.0    0.00    0.00      19         std::vector<Point, std::allocator<Point> >::_S_max_size(std::allocator<Point> const&) [30]
                0.00    0.00      19/19          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [31]
-----------------------------------------------
                0.00    0.00      19/19          std::vector<Point, std::allocator<Point> >::_S_max_size(std::allocator<Point> const&) [30]
[31]     0.0    0.00    0.00      19         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [31]
-----------------------------------------------
                0.00    0.00       2/19          std::vector<Point, std::allocator<Point> >::push_back(Point const&) [88]
                0.00    0.00       8/19          std::deque<Point, std::allocator<Point> >::push_back(Point const&) [87]
                0.00    0.00       9/19          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
[32]     0.0    0.00    0.00      19         Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [32]
-----------------------------------------------
                0.00    0.00       1/18          void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
                0.00    0.00       1/18          void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
                0.00    0.00       4/18          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) [193]
                0.00    0.00       4/18          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) [192]
                0.00    0.00       4/18          void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
                0.00    0.00       4/18          void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
[33]     0.0    0.00    0.00      18         bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00      36/92          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [14]
-----------------------------------------------
                0.00    0.00      18/18          std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [57]
[34]     0.0    0.00    0.00      18         std::vector<Point, std::allocator<Point> >::max_size() const [34]
                0.00    0.00      18/20          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [29]
                0.00    0.00      18/19          std::vector<Point, std::allocator<Point> >::_S_max_size(std::allocator<Point> const&) [30]
-----------------------------------------------
                0.00    0.00       6/18          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00      12/18          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[35]     0.0    0.00    0.00      18         std::vector<Point, std::allocator<Point> >::_S_relocate(Point*, Point*, Point*, std::allocator<Point>&) [35]
                0.00    0.00      18/18          Point* std::__relocate_a<Point*, Point*, std::allocator<Point> >(Point*, Point*, Point*, std::allocator<Point>&) [36]
-----------------------------------------------
                0.00    0.00      18/18          std::vector<Point, std::allocator<Point> >::_S_relocate(Point*, Point*, Point*, std::allocator<Point>&) [35]
[36]     0.0    0.00    0.00      18         Point* std::__relocate_a<Point*, Point*, std::allocator<Point> >(Point*, Point*, Point*, std::allocator<Point>&) [36]
                0.00    0.00      54/57          Point* std::__niter_base<Point*>(Point*) [16]
                0.00    0.00      18/18          std::enable_if<std::__is_bitwise_relocatable<Point, void>::value, Point*>::type std::__relocate_a_1<Point, Point>(Point*, Point*, Point*, std::allocator<Point>&) [37]
-----------------------------------------------
                0.00    0.00      18/18          Point* std::__relocate_a<Point*, Point*, std::allocator<Point> >(Point*, Point*, Point*, std::allocator<Point>&) [36]
[37]     0.0    0.00    0.00      18         std::enable_if<std::__is_bitwise_relocatable<Point, void>::value, Point*>::type std::__relocate_a_1<Point, Point>(Point*, Point*, Point*, std::allocator<Point>&) [37]
-----------------------------------------------
                0.00    0.00      16/16          main [11]
[38]     0.0    0.00    0.00      16         bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [38]
                0.00    0.00      32/32          __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [21]
-----------------------------------------------
                0.00    0.00       1/16          void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
                0.00    0.00       3/16          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       6/16          std::_Vector_base<Point, std::allocator<Point> >::~_Vector_base() [70]
                0.00    0.00       6/16          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[39]     0.0    0.00    0.00      16         std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [39]
                0.00    0.00      12/13          std::__new_allocator<Point>::deallocate(Point*, unsigned long) [43]
-----------------------------------------------
                0.00    0.00       1/16          std::vector<Point, std::allocator<Point> >::push_back(Point const&) [88]
                0.00    0.00       2/16          Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
                0.00    0.00       3/16          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       4/16          std::deque<Point, std::allocator<Point> >::push_back(Point const&) [87]
                0.00    0.00       6/16          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[40]     0.0    0.00    0.00      16         operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00       1/15          void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
                0.00    0.00       1/15          void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
                0.00    0.00       1/15          void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [201]
                0.00    0.00       1/15          void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [204]
                0.00    0.00       1/15          void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [200]
                0.00    0.00       1/15          void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [203]
                0.00    0.00       3/15          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       6/15          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[41]     0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00      30/92          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [14]
-----------------------------------------------
                0.00    0.00       3/14          void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
                0.00    0.00       3/14          void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
                0.00    0.00       4/14          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) [193]
                0.00    0.00       4/14          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) [192]
[42]     0.0    0.00    0.00      14         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++() [42]
-----------------------------------------------
                0.00    0.00       1/13          std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [171]
                0.00    0.00      12/13          std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [39]
[43]     0.0    0.00    0.00      13         std::__new_allocator<Point>::deallocate(Point*, unsigned long) [43]
-----------------------------------------------
                0.00    0.00       1/13          std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [167]
                0.00    0.00      12/13          std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [50]
[44]     0.0    0.00    0.00      13         std::__new_allocator<Point>::allocate(unsigned long, void const*) [44]
-----------------------------------------------
                0.00    0.00       2/13          Convex::findConvexHull_using_vector() [152]
                0.00    0.00       2/13          Convex::findConvexHull_using_deque() [151]
                0.00    0.00       3/13          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       6/13          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[45]     0.0    0.00    0.00      13         std::vector<Point, std::allocator<Point> >::begin() [45]
                0.00    0.00      13/48          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&) [18]
-----------------------------------------------
                0.00    0.00       1/13          std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [171]
                0.00    0.00       1/13          std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [167]
                0.00    0.00       2/13          std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
                0.00    0.00       9/13          std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [58]
[46]     0.0    0.00    0.00      13         std::__deque_buf_size(unsigned long) [46]
-----------------------------------------------
                0.00    0.00       6/12          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [104]
                0.00    0.00       6/12          void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [103]
[47]     0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator--() [47]
-----------------------------------------------
                0.00    0.00      12/12          main [11]
[48]     0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [48]
-----------------------------------------------
                0.00    0.00      12/12          main [11]
[49]     0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [49]
-----------------------------------------------
                0.00    0.00       1/12          Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [186]
                0.00    0.00       2/12          std::_Vector_base<Point, std::allocator<Point> >::_M_create_storage(unsigned long) [122]
                0.00    0.00       3/12          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       6/12          void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[50]     0.0    0.00    0.00      12         std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [50]
                0.00    0.00      12/13          std::__new_allocator<Point>::allocate(unsigned long, void const*) [44]
-----------------------------------------------
                0.00    0.00      12/12          std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&) [52]
[51]     0.0    0.00    0.00      12         std::pair<float, float>::pair<float&, float&, true>(float&, float&) [51]
                0.00    0.00      24/48          float& std::forward<float&>(std::remove_reference<float&>::type&) [19]
-----------------------------------------------
                0.00    0.00       6/12          Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}::operator()(Point, Point) const [108]
                0.00    0.00       6/12          Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}::operator()(Point, Point) const [107]
[52]     0.0    0.00    0.00      12         std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&) [52]
                0.00    0.00      24/48          float& std::forward<float&>(std::remove_reference<float&>::type&) [19]
                0.00    0.00      12/12          std::pair<float, float>::pair<float&, float&, true>(float&, float&) [51]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Point, std::allocator<Point> >::back() [55]
[53]     0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator-(long) const [53]
                0.00    0.00      10/48          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&) [18]
-----------------------------------------------
                0.00    0.00       1/10          std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [163]
                0.00    0.00       1/10          std::vector<Point, std::allocator<Point> >::_S_check_init_len(unsigned long, std::allocator<Point> const&) [185]
                0.00    0.00       2/10          std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
                0.00    0.00       6/10          std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::~_Vector_impl() [68]
[54]     0.0    0.00    0.00      10         std::__new_allocator<Point>::~__new_allocator() [54]
-----------------------------------------------
                0.00    0.00       2/10          Convex::findConvexHull_using_vector() [152]
                0.00    0.00       8/10          Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
[55]     0.0    0.00    0.00      10         std::vector<Point, std::allocator<Point> >::back() [55]
                0.00    0.00      10/23          std::vector<Point, std::allocator<Point> >::end() [27]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator-(long) const [53]
                0.00    0.00      10/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
-----------------------------------------------
                0.00    0.00       1/10          std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
                0.00    0.00       9/10          std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [57]
[56]     0.0    0.00    0.00      10         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [56]
-----------------------------------------------
                0.00    0.00       3/9           void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       6/9           void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
[57]     0.0    0.00    0.00       9         std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [57]
                0.00    0.00      36/52          std::vector<Point, std::allocator<Point> >::size() const [17]
                0.00    0.00      18/18          std::vector<Point, std::allocator<Point> >::max_size() const [34]
                0.00    0.00       9/10          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [56]
-----------------------------------------------
                0.00    0.00       2/9           std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [124]
                0.00    0.00       2/9           std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [127]
                0.00    0.00       5/9           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [76]
[58]     0.0    0.00    0.00       9         std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [58]
                0.00    0.00       9/13          std::__deque_buf_size(unsigned long) [46]
-----------------------------------------------
                0.00    0.00       3/9           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [96]
                0.00    0.00       6/9           bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [66]
[59]     0.0    0.00    0.00       9         Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [59]
                0.00    0.00      12/24          Convex::calculate_distance(Point, Point) [26]
                0.00    0.00       9/22          Convex::orientation(Point, Point, Point) [28]
-----------------------------------------------
                0.00    0.00       3/9           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [98]
                0.00    0.00       6/9           bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [67]
[60]     0.0    0.00    0.00       9         Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [60]
                0.00    0.00      12/24          Convex::calculate_distance(Point, Point) [26]
                0.00    0.00       9/22          Convex::orientation(Point, Point, Point) [28]
-----------------------------------------------
                0.00    0.00       8/8           main [11]
[61]     0.0    0.00    0.00       8         Convex::add_vx(float, float) [61]
                0.00    0.00       8/8           std::vector<Point, std::allocator<Point> >::push_back(Point&&) [63]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Point, std::allocator<Point> >::push_back(Point&&) [63]
[62]     0.0    0.00    0.00       8         Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
                0.00    0.00      12/30          Point&& std::forward<Point>(std::remove_reference<Point>::type&) [23]
                0.00    0.00       8/10          std::vector<Point, std::allocator<Point> >::back() [55]
                0.00    0.00       6/23          std::vector<Point, std::allocator<Point> >::end() [27]
                0.00    0.00       6/6           void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
                0.00    0.00       2/16          operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00       8/8           Convex::add_vx(float, float) [61]
[63]     0.0    0.00    0.00       8         std::vector<Point, std::allocator<Point> >::push_back(Point&&) [63]
                0.00    0.00       8/26          std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [25]
                0.00    0.00       8/8           Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
-----------------------------------------------
                0.00    0.00       7/7           void std::_Destroy<Point*>(Point*, Point*) [65]
[64]     0.0    0.00    0.00       7         void std::_Destroy_aux<true>::__destroy<Point*>(Point*, Point*) [64]
-----------------------------------------------
                0.00    0.00       1/7           void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
                0.00    0.00       6/7           std::vector<Point, std::allocator<Point> >::~vector() [72]
[65]     0.0    0.00    0.00       7         void std::_Destroy<Point*>(Point*, Point*) [65]
                0.00    0.00       7/7           void std::_Destroy_aux<true>::__destroy<Point*>(Point*, Point*) [64]
-----------------------------------------------
                0.00    0.00       6/6           void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [103]
[66]     0.0    0.00    0.00       6         bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [66]
                0.00    0.00       6/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       6/9           Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [59]
-----------------------------------------------
                0.00    0.00       6/6           void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [104]
[67]     0.0    0.00    0.00       6         bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [67]
                0.00    0.00       6/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       6/9           Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [60]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<Point, std::allocator<Point> >::~_Vector_base() [70]
[68]     0.0    0.00    0.00       6         std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::~_Vector_impl() [68]
                0.00    0.00       6/10          std::__new_allocator<Point>::~__new_allocator() [54]
-----------------------------------------------
                0.00    0.00       2/6           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl(std::allocator<Point> const&) [121]
                0.00    0.00       4/6           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl() [82]
[69]     0.0    0.00    0.00       6         std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl_data::_Vector_impl_data() [69]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<Point, std::allocator<Point> >::~vector() [72]
[70]     0.0    0.00    0.00       6         std::_Vector_base<Point, std::allocator<Point> >::~_Vector_base() [70]
                0.00    0.00       6/16          std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [39]
                0.00    0.00       6/6           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::~_Vector_impl() [68]
-----------------------------------------------
                0.00    0.00       6/6           Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [62]
[71]     0.0    0.00    0.00       6         void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [71]
                0.00    0.00      18/30          Point&& std::forward<Point>(std::remove_reference<Point>::type&) [23]
                0.00    0.00      12/29          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
                0.00    0.00      12/92          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [14]
                0.00    0.00      12/18          std::vector<Point, std::allocator<Point> >::_S_relocate(Point*, Point*, Point*, std::allocator<Point>&) [35]
                0.00    0.00       6/9           std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [57]
                0.00    0.00       6/13          std::vector<Point, std::allocator<Point> >::begin() [45]
                0.00    0.00       6/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00       6/12          std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [50]
                0.00    0.00       6/16          operator new(unsigned long, void*) [40]
                0.00    0.00       6/16          std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [39]
-----------------------------------------------
                0.00    0.00       2/6           main [11]
                0.00    0.00       4/6           Convex::~Convex() [111]
[72]     0.0    0.00    0.00       6         std::vector<Point, std::allocator<Point> >::~vector() [72]
                0.00    0.00       6/29          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
                0.00    0.00       6/7           void std::_Destroy<Point*>(Point*, Point*) [65]
                0.00    0.00       6/6           std::_Vector_base<Point, std::allocator<Point> >::~_Vector_base() [70]
-----------------------------------------------
                0.00    0.00       3/6           Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}::operator()(Point, Point) const [108]
                0.00    0.00       3/6           Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}::operator()(Point, Point) const [107]
[73]     0.0    0.00    0.00       6         bool std::operator< <float, float>(std::pair<float, float> const&, std::pair<float, float> const&) [73]
-----------------------------------------------
                0.00    0.00       1/5           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [158]
                0.00    0.00       1/5           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [154]
                0.00    0.00       3/5           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&&) [93]
[74]     0.0    0.00    0.00       5         std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&) [74]
-----------------------------------------------
                0.00    0.00       1/5           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [160]
                0.00    0.00       1/5           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [156]
                0.00    0.00       3/5           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&&) [94]
[75]     0.0    0.00    0.00       5         std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&) [75]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
                0.00    0.00       4/5           std::deque<Point, std::allocator<Point> >::size() const [81]
[76]     0.0    0.00    0.00       5         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [76]
                0.00    0.00       5/9           std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [58]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<Point, std::allocator<Point> >::begin() const [119]
                0.00    0.00       2/4           std::vector<Point, std::allocator<Point> >::end() const [118]
[77]     0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point const* const&) [77]
-----------------------------------------------
                0.00    0.00       1/4           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) [193]
                0.00    0.00       1/4           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) [192]
                0.00    0.00       1/4           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
                0.00    0.00       1/4           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
[78]     0.0    0.00    0.00       4         bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [78]
                0.00    0.00       8/92          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [14]
-----------------------------------------------
                0.00    0.00       4/4           Point const* std::__niter_base<Point const*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >) [91]
[79]     0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::base() const [79]
-----------------------------------------------
                0.00    0.00       2/4           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const [116]
                0.00    0.00       2/4           std::deque<Point, std::allocator<Point> >::back() [130]
[80]     0.0    0.00    0.00       4         std::_Deque_iterator<Point, Point&, Point*>::operator*() const [80]
-----------------------------------------------
                0.00    0.00       4/4           Convex::findConvexHull_using_deque() [151]
[81]     0.0    0.00    0.00       4         std::deque<Point, std::allocator<Point> >::size() const [81]
                0.00    0.00       4/5           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [76]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Point, std::allocator<Point> >::_Vector_base() [83]
[82]     0.0    0.00    0.00       4         std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl() [82]
                0.00    0.00       4/6           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl_data::_Vector_impl_data() [69]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Point, std::allocator<Point> >::vector() [89]
[83]     0.0    0.00    0.00       4         std::_Vector_base<Point, std::allocator<Point> >::_Vector_base() [83]
                0.00    0.00       4/4           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl() [82]
-----------------------------------------------
                0.00    0.00       2/4           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const [116]
                0.00    0.00       2/4           std::deque<Point, std::allocator<Point> >::back() [130]
[84]     0.0    0.00    0.00       4         std::_Deque_iterator<Point, Point&, Point*>::operator--() [84]
-----------------------------------------------
                0.00    0.00       2/4           std::deque<Point, std::allocator<Point> >::rbegin() [132]
                0.00    0.00       2/4           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator+(long) const [117]
[85]     0.0    0.00    0.00       4         std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::reverse_iterator(std::_Deque_iterator<Point, Point&, Point*>) [85]
                0.00    0.00       4/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
-----------------------------------------------
                0.00    0.00       1/4           Convex::findConvexHull_using_deque() [151]
                0.00    0.00       1/4           std::deque<Point, std::allocator<Point> >::~deque() [182]
                0.00    0.00       2/4           std::deque<Point, std::allocator<Point> >::back() [130]
[86]     0.0    0.00    0.00       4         std::deque<Point, std::allocator<Point> >::end() [86]
                0.00    0.00       4/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
-----------------------------------------------
                0.00    0.00       4/4           Convex::findConvexHull_using_deque() [151]
[87]     0.0    0.00    0.00       4         std::deque<Point, std::allocator<Point> >::push_back(Point const&) [87]
                0.00    0.00       8/19          Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [32]
                0.00    0.00       4/16          operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00       4/4           Convex::findConvexHull_using_vector() [152]
[88]     0.0    0.00    0.00       4         std::vector<Point, std::allocator<Point> >::push_back(Point const&) [88]
                0.00    0.00       3/23          std::vector<Point, std::allocator<Point> >::end() [27]
                0.00    0.00       3/3           void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       2/19          Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [32]
                0.00    0.00       1/16          operator new(unsigned long, void*) [40]
-----------------------------------------------
                0.00    0.00       4/4           Convex::Convex(int) [110]
[89]     0.0    0.00    0.00       4         std::vector<Point, std::allocator<Point> >::vector() [89]
                0.00    0.00       4/4           std::_Vector_base<Point, std::allocator<Point> >::_Vector_base() [83]
-----------------------------------------------
                0.00    0.00       4/4           Point* std::copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [145]
[90]     0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > std::__miter_base<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >) [90]
-----------------------------------------------
                0.00    0.00       4/4           Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [137]
[91]     0.0    0.00    0.00       4         Point const* std::__niter_base<Point const*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >) [91]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::base() const [79]
-----------------------------------------------
                0.00    0.00       4/4           main [11]
[92]     0.0    0.00    0.00       4         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [92]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [99]
[93]     0.0    0.00    0.00       3         __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&&) [93]
                0.00    0.00       3/5           std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&) [74]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [100]
[94]     0.0    0.00    0.00       3         __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&&) [94]
                0.00    0.00       3/5           std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&) [75]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) [192]
[95]     0.0    0.00    0.00       3         bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [95]
                0.00    0.00       6/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       3/3           Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}::operator()(Point, Point) const [107]
-----------------------------------------------
                0.00    0.00       3/3           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
[96]     0.0    0.00    0.00       3         bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [96]
                0.00    0.00       6/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       3/9           Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [59]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) [193]
[97]     0.0    0.00    0.00       3         bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [97]
                0.00    0.00       6/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       3/3           Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}::operator()(Point, Point) const [108]
-----------------------------------------------
                0.00    0.00       3/3           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
[98]     0.0    0.00    0.00       3         bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [98]
                0.00    0.00       6/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       3/9           Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const [60]
-----------------------------------------------
                0.00    0.00       3/3           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
[99]     0.0    0.00    0.00       3         __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [99]
                0.00    0.00       3/3           std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&) [105]
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&&) [93]
-----------------------------------------------
                0.00    0.00       3/3           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
[100]    0.0    0.00    0.00       3         __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [100]
                0.00    0.00       3/3           std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&) [106]
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&&) [94]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<Point, std::allocator<Point> >::push_back(Point const&) [88]
[101]    0.0    0.00    0.00       3         void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [101]
                0.00    0.00       9/19          Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [32]
                0.00    0.00       6/29          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
                0.00    0.00       6/92          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [14]
                0.00    0.00       6/18          std::vector<Point, std::allocator<Point> >::_S_relocate(Point*, Point*, Point*, std::allocator<Point>&) [35]
                0.00    0.00       3/9           std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [57]
                0.00    0.00       3/13          std::vector<Point, std::allocator<Point> >::begin() [45]
                0.00    0.00       3/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00       3/12          std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [50]
                0.00    0.00       3/16          operator new(unsigned long, void*) [40]
                0.00    0.00       3/16          std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [39]
-----------------------------------------------
                0.00    0.00       1/3           Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
                0.00    0.00       2/3           Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [137]
[102]    0.0    0.00    0.00       3         Point* std::__niter_wrap<Point*>(Point* const&, Point*) [102]
-----------------------------------------------
                0.00    0.00       3/3           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
[103]    0.0    0.00    0.00       3         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [103]
                0.00    0.00      12/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       9/26          std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [25]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator--() [47]
                0.00    0.00       6/6           bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [66]
-----------------------------------------------
                0.00    0.00       3/3           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
[104]    0.0    0.00    0.00       3         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [104]
                0.00    0.00      12/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       9/26          std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [25]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator--() [47]
                0.00    0.00       6/6           bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [67]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [99]
[105]    0.0    0.00    0.00       3         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&) [105]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [100]
[106]    0.0    0.00    0.00       3         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&) [106]
-----------------------------------------------
                0.00    0.00       3/3           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [95]
[107]    0.0    0.00    0.00       3         Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}::operator()(Point, Point) const [107]
                0.00    0.00       6/12          std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&) [52]
                0.00    0.00       3/6           bool std::operator< <float, float>(std::pair<float, float> const&, std::pair<float, float> const&) [73]
-----------------------------------------------
                0.00    0.00       3/3           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [97]
[108]    0.0    0.00    0.00       3         Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}::operator()(Point, Point) const [108]
                0.00    0.00       6/12          std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&) [52]
                0.00    0.00       3/6           bool std::operator< <float, float>(std::pair<float, float> const&, std::pair<float, float> const&) [73]
-----------------------------------------------
                0.00    0.00       2/2           main [11]
[109]    0.0    0.00    0.00       2         Convex::calculate_area() [109]
                0.00    0.00      16/30          std::vector<Point, std::allocator<Point> >::operator[](unsigned long) [22]
                0.00    0.00       4/52          std::vector<Point, std::allocator<Point> >::size() const [17]
                0.00    0.00       2/2           std::abs(float) [143]
-----------------------------------------------
                0.00    0.00       2/2           main [11]
[110]    0.0    0.00    0.00       2         Convex::Convex(int) [110]
                0.00    0.00       4/4           std::vector<Point, std::allocator<Point> >::vector() [89]
-----------------------------------------------
                0.00    0.00       2/2           main [11]
[111]    0.0    0.00    0.00       2         Convex::~Convex() [111]
                0.00    0.00       4/6           std::vector<Point, std::allocator<Point> >::~vector() [72]
-----------------------------------------------
                0.00    0.00       2/2           main [11]
[112]    0.0    0.00    0.00       2         Convex::get_convex_vx() const [112]
-----------------------------------------------
                0.00    0.00       1/2           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
                0.00    0.00       1/2           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
[113]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator+(long) const [113]
                0.00    0.00       2/48          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&) [18]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [115]
[114]    0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [114]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [169]
                0.00    0.00       1/2           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [164]
[115]    0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [115]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [114]
-----------------------------------------------
                0.00    0.00       2/2           Convex::findConvexHull_using_deque() [151]
[116]    0.0    0.00    0.00       2         std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const [116]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       2/4           std::_Deque_iterator<Point, Point&, Point*>::operator--() [84]
                0.00    0.00       2/4           std::_Deque_iterator<Point, Point&, Point*>::operator*() const [80]
-----------------------------------------------
                0.00    0.00       2/2           Convex::findConvexHull_using_deque() [151]
[117]    0.0    0.00    0.00       2         std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator+(long) const [117]
                0.00    0.00       2/2           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [148]
                0.00    0.00       2/4           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::reverse_iterator(std::_Deque_iterator<Point, Point&, Point*>) [85]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
[118]    0.0    0.00    0.00       2         std::vector<Point, std::allocator<Point> >::end() const [118]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point const* const&) [77]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
[119]    0.0    0.00    0.00       2         std::vector<Point, std::allocator<Point> >::begin() const [119]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point const* const&) [77]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::__copy_move_a2<false, Point const*, Point*>(Point const*, Point const*, Point*) [140]
[120]    0.0    0.00    0.00       2         Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point const, Point>(Point const*, Point const*, Point*) [120]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Point, std::allocator<Point> >::_Vector_base(unsigned long, std::allocator<Point> const&) [123]
[121]    0.0    0.00    0.00       2         std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl(std::allocator<Point> const&) [121]
                0.00    0.00       2/6           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl_data::_Vector_impl_data() [69]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Point, std::allocator<Point> >::_Vector_base(unsigned long, std::allocator<Point> const&) [123]
[122]    0.0    0.00    0.00       2         std::_Vector_base<Point, std::allocator<Point> >::_M_create_storage(unsigned long) [122]
                0.00    0.00       2/12          std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [50]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
[123]    0.0    0.00    0.00       2         std::_Vector_base<Point, std::allocator<Point> >::_Vector_base(unsigned long, std::allocator<Point> const&) [123]
                0.00    0.00       2/2           std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl(std::allocator<Point> const&) [121]
                0.00    0.00       2/2           std::_Vector_base<Point, std::allocator<Point> >::_M_create_storage(unsigned long) [122]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
[124]    0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [124]
                0.00    0.00       2/9           std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [58]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [166]
[125]    0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator() [125]
-----------------------------------------------
                0.00    0.00       2/2           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [148]
[126]    0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [126]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [127]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [126]
[127]    0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [127]
                0.00    0.00       2/9           std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [58]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [169]
                0.00    0.00       1/2           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [164]
[128]    0.0    0.00    0.00       2         std::__new_allocator<Point*>::~__new_allocator() [128]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [141]
[129]    0.0    0.00    0.00       2         Point* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [129]
                0.00    0.00       2/2           Point* std::copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [145]
-----------------------------------------------
                0.00    0.00       2/2           Convex::findConvexHull_using_deque() [151]
[130]    0.0    0.00    0.00       2         std::deque<Point, std::allocator<Point> >::back() [130]
                0.00    0.00       2/4           std::deque<Point, std::allocator<Point> >::end() [86]
                0.00    0.00       2/4           std::_Deque_iterator<Point, Point&, Point*>::operator--() [84]
                0.00    0.00       2/4           std::_Deque_iterator<Point, Point&, Point*>::operator*() const [80]
-----------------------------------------------
                0.00    0.00       1/2           Convex::findConvexHull_using_deque() [151]
                0.00    0.00       1/2           std::deque<Point, std::allocator<Point> >::~deque() [182]
[131]    0.0    0.00    0.00       2         std::deque<Point, std::allocator<Point> >::begin() [131]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
-----------------------------------------------
                0.00    0.00       2/2           Convex::findConvexHull_using_deque() [151]
[132]    0.0    0.00    0.00       2         std::deque<Point, std::allocator<Point> >::rbegin() [132]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       2/4           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::reverse_iterator(std::_Deque_iterator<Point, Point&, Point*>) [85]
-----------------------------------------------
                0.00    0.00       2/2           main [11]
[133]    0.0    0.00    0.00       2         std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
                0.00    0.00       2/20          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [29]
                0.00    0.00       2/52          std::vector<Point, std::allocator<Point> >::size() const [17]
                0.00    0.00       2/2           std::_Vector_base<Point, std::allocator<Point> >::_Vector_base(unsigned long, std::allocator<Point> const&) [123]
                0.00    0.00       2/10          std::__new_allocator<Point>::~__new_allocator() [54]
                0.00    0.00       2/29          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
                0.00    0.00       2/2           std::vector<Point, std::allocator<Point> >::end() const [118]
                0.00    0.00       2/2           std::vector<Point, std::allocator<Point> >::begin() const [119]
                0.00    0.00       2/2           Point* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, Point>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, std::allocator<Point>&) [142]
-----------------------------------------------
                0.00    0.00       2/2           long std::__lg<long>(long) [144]
[134]    0.0    0.00    0.00       2         int std::__bit_width<unsigned long>(unsigned long) [134]
                0.00    0.00       2/2           int std::__countl_zero<unsigned long>(unsigned long) [138]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [206]
[135]    0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [135]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
[136]    0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [136]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [145]
[137]    0.0    0.00    0.00       2         Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [137]
                0.00    0.00       4/4           Point const* std::__niter_base<Point const*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >) [91]
                0.00    0.00       2/57          Point* std::__niter_base<Point*>(Point*) [16]
                0.00    0.00       2/2           Point* std::__copy_move_a1<false, Point const*, Point*>(Point const*, Point const*, Point*) [139]
                0.00    0.00       2/3           Point* std::__niter_wrap<Point*>(Point* const&, Point*) [102]
-----------------------------------------------
                0.00    0.00       2/2           int std::__bit_width<unsigned long>(unsigned long) [134]
[138]    0.0    0.00    0.00       2         int std::__countl_zero<unsigned long>(unsigned long) [138]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [137]
[139]    0.0    0.00    0.00       2         Point* std::__copy_move_a1<false, Point const*, Point*>(Point const*, Point const*, Point*) [139]
                0.00    0.00       2/2           Point* std::__copy_move_a2<false, Point const*, Point*>(Point const*, Point const*, Point*) [140]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::__copy_move_a1<false, Point const*, Point*>(Point const*, Point const*, Point*) [139]
[140]    0.0    0.00    0.00       2         Point* std::__copy_move_a2<false, Point const*, Point*>(Point const*, Point const*, Point*) [140]
                0.00    0.00       2/2           Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point const, Point>(Point const*, Point const*, Point*) [120]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, Point>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, std::allocator<Point>&) [142]
[141]    0.0    0.00    0.00       2         Point* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [141]
                0.00    0.00       2/2           Point* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [129]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [133]
[142]    0.0    0.00    0.00       2         Point* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, Point>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, std::allocator<Point>&) [142]
                0.00    0.00       2/2           Point* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [141]
-----------------------------------------------
                0.00    0.00       2/2           Convex::calculate_area() [109]
[143]    0.0    0.00    0.00       2         std::abs(float) [143]
-----------------------------------------------
                0.00    0.00       1/2           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
                0.00    0.00       1/2           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
[144]    0.0    0.00    0.00       2         long std::__lg<long>(long) [144]
                0.00    0.00       2/2           int std::__bit_width<unsigned long>(unsigned long) [134]
-----------------------------------------------
                0.00    0.00       2/2           Point* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [129]
[145]    0.0    0.00    0.00       2         Point* std::copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [145]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > std::__miter_base<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >) [90]
                0.00    0.00       2/2           Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [137]
-----------------------------------------------
                0.00    0.00       1/2           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [157]
                0.00    0.00       1/2           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [153]
[146]    0.0    0.00    0.00       2         std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&) [146]
-----------------------------------------------
                0.00    0.00       1/2           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [159]
                0.00    0.00       1/2           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [155]
[147]    0.0    0.00    0.00       2         std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&) [147]
-----------------------------------------------
                0.00    0.00       2/2           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator+(long) const [117]
[148]    0.0    0.00    0.00       2         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [148]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [126]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[149]    0.0    0.00    0.00       1         run_convexHull_deque(Convex&) [149]
                0.00    0.00       1/1           Convex::findConvexHull_using_deque() [151]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[150]    0.0    0.00    0.00       1         run_convexHull_vector(Convex&) [150]
                0.00    0.00       1/1           Convex::findConvexHull_using_vector() [152]
-----------------------------------------------
                0.00    0.00       1/1           run_convexHull_deque(Convex&) [149]
[151]    0.0    0.00    0.00       1         Convex::findConvexHull_using_deque() [151]
                0.00    0.00       6/30          std::vector<Point, std::allocator<Point> >::operator[](unsigned long) [22]
                0.00    0.00       4/4           std::deque<Point, std::allocator<Point> >::size() const [81]
                0.00    0.00       4/4           std::deque<Point, std::allocator<Point> >::push_back(Point const&) [87]
                0.00    0.00       2/23          std::vector<Point, std::allocator<Point> >::end() [27]
                0.00    0.00       2/13          std::vector<Point, std::allocator<Point> >::begin() [45]
                0.00    0.00       2/2           std::deque<Point, std::allocator<Point> >::back() [130]
                0.00    0.00       2/2           std::deque<Point, std::allocator<Point> >::rbegin() [132]
                0.00    0.00       2/2           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator+(long) const [117]
                0.00    0.00       2/2           std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const [116]
                0.00    0.00       2/22          Convex::orientation(Point, Point, Point) [28]
                0.00    0.00       1/52          std::vector<Point, std::allocator<Point> >::size() const [17]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [189]
                0.00    0.00       1/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       1/1           void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [207]
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::deque() [181]
                0.00    0.00       1/4           std::deque<Point, std::allocator<Point> >::end() [86]
                0.00    0.00       1/2           std::deque<Point, std::allocator<Point> >::begin() [131]
                0.00    0.00       1/1           void std::vector<Point, std::allocator<Point> >::assign<std::_Deque_iterator<Point, Point&, Point*>, void>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [188]
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::~deque() [182]
-----------------------------------------------
                0.00    0.00       1/1           run_convexHull_vector(Convex&) [150]
[152]    0.0    0.00    0.00       1         Convex::findConvexHull_using_vector() [152]
                0.00    0.00       8/30          std::vector<Point, std::allocator<Point> >::operator[](unsigned long) [22]
                0.00    0.00       7/52          std::vector<Point, std::allocator<Point> >::size() const [17]
                0.00    0.00       4/4           std::vector<Point, std::allocator<Point> >::push_back(Point const&) [88]
                0.00    0.00       2/23          std::vector<Point, std::allocator<Point> >::end() [27]
                0.00    0.00       2/13          std::vector<Point, std::allocator<Point> >::begin() [45]
                0.00    0.00       2/10          std::vector<Point, std::allocator<Point> >::back() [55]
                0.00    0.00       2/22          Convex::orientation(Point, Point, Point) [28]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [190]
                0.00    0.00       1/72          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [15]
                0.00    0.00       1/1           void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [208]
                0.00    0.00       1/1           std::vector<Point, std::allocator<Point> >::clear() [187]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [157]
[153]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [153]
                0.00    0.00       1/2           std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&) [146]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [158]
[154]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [154]
                0.00    0.00       1/5           std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&) [74]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [159]
[155]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [155]
                0.00    0.00       1/2           std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&) [147]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [160]
[156]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [156]
                0.00    0.00       1/5           std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&) [75]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [189]
[157]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [157]
                0.00    0.00       1/2           std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&) [146]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [153]
-----------------------------------------------
                0.00    0.00       1/1           void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [207]
[158]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [158]
                0.00    0.00       1/5           std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&) [74]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [154]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [190]
[159]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [159]
                0.00    0.00       1/2           std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&) [147]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [155]
-----------------------------------------------
                0.00    0.00       1/1           void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [208]
[160]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [160]
                0.00    0.00       1/5           std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&) [75]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [156]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
[161]    0.0    0.00    0.00       1         std::vector<Point, std::allocator<Point> >::capacity() const [161]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [173]
[162]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [162]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [166]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [174]
[163]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [163]
                0.00    0.00       1/10          std::__new_allocator<Point>::~__new_allocator() [54]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
[164]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [164]
                0.00    0.00       1/2           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [115]
                0.00    0.00       1/1           std::__new_allocator<Point*>::allocate(unsigned long, void const*) [178]
                0.00    0.00       1/2           std::__new_allocator<Point*>::~__new_allocator() [128]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
[165]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [165]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [167]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [162]
[166]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [166]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator() [125]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [165]
[167]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [167]
                0.00    0.00       1/13          std::__deque_buf_size(unsigned long) [46]
                0.00    0.00       1/13          std::__new_allocator<Point>::allocate(unsigned long, void const*) [44]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [174]
[168]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [168]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [171]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [174]
[169]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [169]
                0.00    0.00       1/2           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [115]
                0.00    0.00       1/1           std::__new_allocator<Point*>::deallocate(Point**, unsigned long) [177]
                0.00    0.00       1/2           std::__new_allocator<Point*>::~__new_allocator() [128]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [173]
[170]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
                0.00    0.00       2/13          std::__deque_buf_size(unsigned long) [46]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [124]
                0.00    0.00       1/10          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [56]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [164]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [165]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [168]
[171]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [171]
                0.00    0.00       1/13          std::__deque_buf_size(unsigned long) [46]
                0.00    0.00       1/13          std::__new_allocator<Point>::deallocate(Point*, unsigned long) [43]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::~deque() [182]
[172]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [172]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::deque() [181]
[173]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [173]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [162]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [170]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::~deque() [182]
[174]    0.0    0.00    0.00       1         std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [174]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [168]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [169]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [163]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_a2<false, Point*, Point*>(Point*, Point*, Point*) [196]
[175]    0.0    0.00    0.00       1         Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point, Point>(Point*, Point*, Point*) [175]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[176]    0.0    0.00    0.00       1         std::numeric_limits<long>::max() [176]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [169]
[177]    0.0    0.00    0.00       1         std::__new_allocator<Point*>::deallocate(Point**, unsigned long) [177]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [164]
[178]    0.0    0.00    0.00       1         std::__new_allocator<Point*>::allocate(unsigned long, void const*) [178]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::uninitialized_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [202]
[179]    0.0    0.00    0.00       1         Point* std::__uninitialized_copy<true>::__uninit_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [179]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       1/1           Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [206]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::~deque() [182]
[180]    0.0    0.00    0.00       1         std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&) [180]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_deque() [151]
[181]    0.0    0.00    0.00       1         std::deque<Point, std::allocator<Point> >::deque() [181]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [173]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_deque() [151]
[182]    0.0    0.00    0.00       1         std::deque<Point, std::allocator<Point> >::~deque() [182]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [172]
                0.00    0.00       1/4           std::deque<Point, std::allocator<Point> >::end() [86]
                0.00    0.00       1/2           std::deque<Point, std::allocator<Point> >::begin() [131]
                0.00    0.00       1/1           std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&) [180]
                0.00    0.00       1/1           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [174]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Point, std::allocator<Point> >::assign<std::_Deque_iterator<Point, Point&, Point*>, void>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [188]
[183]    0.0    0.00    0.00       1         void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
                0.00    0.00       6/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       2/29          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
                0.00    0.00       1/5           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [76]
                0.00    0.00       1/1           std::vector<Point, std::allocator<Point> >::capacity() const [161]
                0.00    0.00       1/1           std::vector<Point, std::allocator<Point> >::_S_check_init_len(unsigned long, std::allocator<Point> const&) [185]
                0.00    0.00       1/1           Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [186]
                0.00    0.00       1/7           void std::_Destroy<Point*>(Point*, Point*) [65]
                0.00    0.00       1/16          std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [39]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Point, std::allocator<Point> >::clear() [187]
[184]    0.0    0.00    0.00       1         std::vector<Point, std::allocator<Point> >::_M_erase_at_end(Point*) [184]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
[185]    0.0    0.00    0.00       1         std::vector<Point, std::allocator<Point> >::_S_check_init_len(unsigned long, std::allocator<Point> const&) [185]
                0.00    0.00       1/19          std::vector<Point, std::allocator<Point> >::_S_max_size(std::allocator<Point> const&) [30]
                0.00    0.00       1/10          std::__new_allocator<Point>::~__new_allocator() [54]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
[186]    0.0    0.00    0.00       1         Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [186]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       1/12          std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [50]
                0.00    0.00       1/29          std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [24]
                0.00    0.00       1/1           Point* std::__uninitialized_copy_a<std::_Deque_iterator<Point, Point&, Point*>, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*, std::allocator<Point>&) [205]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_vector() [152]
[187]    0.0    0.00    0.00       1         std::vector<Point, std::allocator<Point> >::clear() [187]
                0.00    0.00       1/1           std::vector<Point, std::allocator<Point> >::_M_erase_at_end(Point*) [184]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_deque() [151]
[188]    0.0    0.00    0.00       1         void std::vector<Point, std::allocator<Point> >::assign<std::_Deque_iterator<Point, Point&, Point*>, void>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [188]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       1/1           void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [183]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_deque() [151]
[189]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [189]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [157]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) [192]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_vector() [152]
[190]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [190]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [159]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) [193]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [206]
[191]    0.0    0.00    0.00       1         Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [136]
                0.00    0.00       1/57          Point* std::__niter_base<Point*>(Point*) [16]
                0.00    0.00       1/1           Point* std::__copy_move_a1<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [194]
                0.00    0.00       1/3           Point* std::__niter_wrap<Point*>(Point* const&, Point*) [102]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) [189]
[192]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) [192]
                0.00    0.00       4/14          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++() [42]
                0.00    0.00       4/18          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00       3/3           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [95]
                0.00    0.00       1/4           bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [78]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) [190]
[193]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) [193]
                0.00    0.00       4/14          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++() [42]
                0.00    0.00       4/18          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00       3/3           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [97]
                0.00    0.00       1/4           bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [78]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
[194]    0.0    0.00    0.00       1         Point* std::__copy_move_a1<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [194]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       1/1           Point* std::__copy_move_dit<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [197]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_dit<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [197]
[195]    0.0    0.00    0.00       1         Point* std::__copy_move_a1<false, Point*, Point*>(Point*, Point*, Point*) [195]
                0.00    0.00       1/1           Point* std::__copy_move_a2<false, Point*, Point*>(Point*, Point*, Point*) [196]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_a1<false, Point*, Point*>(Point*, Point*, Point*) [195]
[196]    0.0    0.00    0.00       1         Point* std::__copy_move_a2<false, Point*, Point*>(Point*, Point*, Point*) [196]
                0.00    0.00       1/1           Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point, Point>(Point*, Point*, Point*) [175]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_a1<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [194]
[197]    0.0    0.00    0.00       1         Point* std::__copy_move_dit<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [197]
                0.00    0.00       1/1           Point* std::__copy_move_a1<false, Point*, Point*>(Point*, Point*, Point*) [195]
-----------------------------------------------
                0.00    0.00       1/1           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [203]
[198]    0.0    0.00    0.00       1         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
                0.00    0.00       4/18          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00       3/3           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [96]
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [99]
                0.00    0.00       3/3           void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [103]
                0.00    0.00       3/14          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++() [42]
                0.00    0.00       1/4           bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [78]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator+(long) const [113]
-----------------------------------------------
                0.00    0.00       1/1           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [204]
[199]    0.0    0.00    0.00       1         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
                0.00    0.00       4/18          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00       3/3           bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) [98]
                0.00    0.00       3/3           __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [100]
                0.00    0.00       3/3           void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [104]
                0.00    0.00       3/14          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++() [42]
                0.00    0.00       1/4           bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [78]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator+(long) const [113]
-----------------------------------------------
                0.00    0.00       1/1           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
[200]    0.0    0.00    0.00       1         void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [200]
                0.00    0.00       1/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
-----------------------------------------------
                0.00    0.00       1/1           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
[201]    0.0    0.00    0.00       1         void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [201]
                0.00    0.00       1/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__uninitialized_copy_a<std::_Deque_iterator<Point, Point&, Point*>, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*, std::allocator<Point>&) [205]
[202]    0.0    0.00    0.00       1         Point* std::uninitialized_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [202]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       1/1           Point* std::__uninitialized_copy<true>::__uninit_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [179]
-----------------------------------------------
                0.00    0.00       1/1           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
[203]    0.0    0.00    0.00       1         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [203]
                0.00    0.00       1/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00       1/1           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [198]
-----------------------------------------------
                0.00    0.00       1/1           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
[204]    0.0    0.00    0.00       1         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [204]
                0.00    0.00       1/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00       1/1           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [199]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [186]
[205]    0.0    0.00    0.00       1         Point* std::__uninitialized_copy_a<std::_Deque_iterator<Point, Point&, Point*>, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*, std::allocator<Point>&) [205]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       1/1           Point* std::uninitialized_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [202]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__uninitialized_copy<true>::__uninit_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [179]
[206]    0.0    0.00    0.00       1         Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [206]
                0.00    0.00       2/42          std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [20]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [135]
                0.00    0.00       1/1           Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [191]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_deque() [151]
[207]    0.0    0.00    0.00       1         void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [207]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [158]
                0.00    0.00       1/1           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
-----------------------------------------------
                0.00    0.00       1/1           Convex::findConvexHull_using_vector() [152]
[208]    0.0    0.00    0.00       1         void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [208]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [160]
                0.00    0.00       1/1           void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
-----------------------------------------------
                0.00    0.00       1/1           void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) [207]
[209]    0.0    0.00    0.00       1         void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [209]
                0.00    0.00       1/18          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00       1/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00       1/2           long std::__lg<long>(long) [144]
                0.00    0.00       1/1           void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [200]
                0.00    0.00       1/1           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) [203]
-----------------------------------------------
                0.00    0.00       1/1           void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) [208]
[210]    0.0    0.00    0.00       1         void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [210]
                0.00    0.00       1/18          bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [33]
                0.00    0.00       1/15          __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [41]
                0.00    0.00       1/2           long std::__lg<long>(long) [144]
                0.00    0.00       1/1           void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [201]
                0.00    0.00       1/1           void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) [204]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [149] run_convexHull_deque(Convex&) [170] std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [189] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) (stl_algo.h)
 [150] run_convexHull_vector(Convex&) [171] std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [190] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) (stl_algo.h)
  [28] Convex::orientation(Point, Point, Point) [172] std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [90] __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > std::__miter_base<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >)
 [109] Convex::calculate_area() [173] std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [135] std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  [26] Convex::calculate_distance(Point, Point) [174] std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [16] Point* std::__niter_base<Point*>(Point*)
 [151] Convex::findConvexHull_using_deque() [175] Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point, Point>(Point*, Point*, Point*) [91] Point const* std::__niter_base<Point const*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >)
 [152] Convex::findConvexHull_using_vector() [120] Point* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Point const, Point>(Point const*, Point const*, Point*) [136] std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  [61] Convex::add_vx(float, float) [64] void std::_Destroy_aux<true>::__destroy<Point*>(Point*, Point*) [102] Point* std::__niter_wrap<Point*>(Point* const&, Point*)
 [110] Convex::Convex(int)    [50] std::_Vector_base<Point, std::allocator<Point> >::_M_allocate(unsigned long) [36] Point* std::__relocate_a<Point*, Point*, std::allocator<Point> >(Point*, Point*, Point*, std::allocator<Point>&)
 [111] Convex::~Convex()     [121] std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl(std::allocator<Point> const&) [137] Point* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  [18] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point* const&) [82] std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::_Vector_impl() [191] Point* std::__copy_move_a<false, std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  [47] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator--() [68] std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl::~_Vector_impl() [138] int std::__countl_zero<unsigned long>(unsigned long)
  [42] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator++() [39] std::_Vector_base<Point, std::allocator<Point> >::_M_deallocate(Point*, unsigned long) [192] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>) (stl_algo.h)
  [77] __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::__normal_iterator(Point const* const&) [122] std::_Vector_base<Point, std::allocator<Point> >::_M_create_storage(unsigned long) [193] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > std::__min_element<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>) (stl_algo.h)
  [48] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [69] std::_Vector_base<Point, std::allocator<Point> >::_Vector_impl_data::_Vector_impl_data() [194] Point* std::__copy_move_a1<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  [93] __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&&) (predefined_ops.h) [24] std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [195] Point* std::__copy_move_a1<false, Point*, Point*>(Point*, Point*, Point*)
  [66] bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) (predefined_ops.h) [123] std::_Vector_base<Point, std::allocator<Point> >::_Vector_base(unsigned long, std::allocator<Point> const&) [139] Point* std::__copy_move_a1<false, Point const*, Point*>(Point const*, Point const*, Point*)
  [94] __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&&) (predefined_ops.h) [83] std::_Vector_base<Point, std::allocator<Point> >::_Vector_base() [196] Point* std::__copy_move_a2<false, Point*, Point*>(Point*, Point*, Point*)
  [67] bool __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<Point, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(Point&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) (predefined_ops.h) [70] std::_Vector_base<Point, std::allocator<Point> >::~_Vector_base() [140] Point* std::__copy_move_a2<false, Point const*, Point*>(Point const*, Point const*, Point*)
 [153] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) (predefined_ops.h) [176] std::numeric_limits<long>::max() [37] std::enable_if<std::__is_bitwise_relocatable<Point, void>::value, Point*>::type std::__relocate_a_1<Point, Point>(Point*, Point*, Point*, std::allocator<Point>&)
  [95] bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) (predefined_ops.h) [124] std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [197] Point* std::__copy_move_dit<false, Point, Point&, Point*, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
 [154] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) (predefined_ops.h) [58] std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [46] std::__deque_buf_size(unsigned long)
  [96] bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) (predefined_ops.h) [20] std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [198] void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
 [155] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) (predefined_ops.h) [125] std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator() [199] void std::__insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
  [97] bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) (predefined_ops.h) [126] std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [200] void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
 [156] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::_Iter_comp_iter(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) (predefined_ops.h) [84] std::_Deque_iterator<Point, Point&, Point*>::operator--() [201] void std::__introsort_loop<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
  [98] bool __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>::operator()<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >) (predefined_ops.h) [127] std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [141] Point* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  [99] __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) (predefined_ops.h) [43] std::__new_allocator<Point>::deallocate(Point*, unsigned long) [202] Point* std::uninitialized_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
 [100] __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) (predefined_ops.h) [44] std::__new_allocator<Point>::allocate(unsigned long, void const*) [203] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
 [157] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}) (predefined_ops.h) [54] std::__new_allocator<Point>::~__new_allocator() [204] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
 [158] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) (predefined_ops.h) [177] std::__new_allocator<Point*>::deallocate(Point**, unsigned long) [142] Point* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, Point>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*, std::allocator<Point>&)
 [159] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}) (predefined_ops.h) [178] std::__new_allocator<Point*>::allocate(unsigned long, void const*) [205] Point* std::__uninitialized_copy_a<std::_Deque_iterator<Point, Point&, Point*>, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*, std::allocator<Point>&)
 [160] __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> __gnu_cxx::__ops::__iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) (predefined_ops.h) [128] std::__new_allocator<Point*>::~__new_allocator() [103] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
  [78] bool __gnu_cxx::operator==<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [85] std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::reverse_iterator(std::_Deque_iterator<Point, Point&, Point*>) [104] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Val_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
  [41] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::difference_type __gnu_cxx::operator-<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [129] Point* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*) [143] std::abs(float)
  [33] bool __gnu_cxx::operator!=<Point*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > > const&) [179] Point* std::__uninitialized_copy<true>::__uninit_copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*) [56] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [38] bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [51] std::pair<float, float>::pair<float&, float&, true>(float&, float&) [31] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
 [112] Convex::get_convex_vx() const [180] std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&) [144] long std::__lg<long>(long)
  [14] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::base() const [86] std::deque<Point, std::allocator<Point> >::end() [145] Point* std::copy<__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*>(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >, Point*)
  [15] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator*() const [130] std::deque<Point, std::allocator<Point> >::back() [206] Point* std::copy<std::_Deque_iterator<Point, Point&, Point*>, Point*>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, Point*)
  [53] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator-(long) const [131] std::deque<Point, std::allocator<Point> >::begin() [25] std::remove_reference<Point&>::type&& std::move<Point&>(Point&)
 [113] __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >::operator+(long) const [132] std::deque<Point, std::allocator<Point> >::rbegin() [105] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>&) (move.h)
  [79] __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::base() const [87] std::deque<Point, std::allocator<Point> >::push_back(Point const&) [106] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>&) (move.h)
  [21] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [181] std::deque<Point, std::allocator<Point> >::deque() [146] std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}&) (move.h)
  [49] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [182] std::deque<Point, std::allocator<Point> >::~deque() [74] std::remove_reference<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}&) (move.h)
 [114] std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [30] std::vector<Point, std::allocator<Point> >::_S_max_size(std::allocator<Point> const&) [147] std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}&) (move.h)
 [115] std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [35] std::vector<Point, std::allocator<Point> >::_S_relocate(Point*, Point*, Point*, std::allocator<Point>&) [75] std::remove_reference<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>::type&& std::move<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&>(Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}&) (move.h)
  [29] std::_Vector_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [62] Point& std::vector<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [207] void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}) (stl_algo.h)
  [80] std::_Deque_iterator<Point, Point&, Point*>::operator*() const [183] void std::vector<Point, std::allocator<Point> >::_M_assign_aux<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::forward_iterator_tag) [208] void std::sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}) (stl_algo.h)
 [116] std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator*() const [184] std::vector<Point, std::allocator<Point> >::_M_erase_at_end(Point*) [209] void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
 [117] std::reverse_iterator<std::_Deque_iterator<Point, Point&, Point*> >::operator+(long) const [101] void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point const&>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point const&) [210] void std::__sort<__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}> >(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, __gnu_cxx::__ops::_Iter_comp_iter<Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}>) (stl_algo.h)
  [81] std::deque<Point, std::allocator<Point> >::size() const [71] void std::vector<Point, std::allocator<Point> >::_M_realloc_insert<Point>(__gnu_cxx::__normal_iterator<Point*, std::vector<Point, std::allocator<Point> > >, Point&&) [23] Point&& std::forward<Point>(std::remove_reference<Point>::type&)
  [57] std::vector<Point, std::allocator<Point> >::_M_check_len(unsigned long, char const*) const [185] std::vector<Point, std::allocator<Point> >::_S_check_init_len(unsigned long, std::allocator<Point> const&) [32] Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&)
 [118] std::vector<Point, std::allocator<Point> >::end() const [186] Point* std::vector<Point, std::allocator<Point> >::_M_allocate_and_copy<std::_Deque_iterator<Point, Point&, Point*> >(unsigned long, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [19] float& std::forward<float&>(std::remove_reference<float&>::type&)
  [17] std::vector<Point, std::allocator<Point> >::size() const [27] std::vector<Point, std::allocator<Point> >::end() [65] void std::_Destroy<Point*>(Point*, Point*)
 [119] std::vector<Point, std::allocator<Point> >::begin() const [55] std::vector<Point, std::allocator<Point> >::back() [52] std::pair<std::__strip_reference_wrapper<std::decay<float&>::type>::__type, std::__strip_reference_wrapper<std::decay<float&>::type>::__type> std::make_pair<float&, float&>(float&, float&)
 [161] std::vector<Point, std::allocator<Point> >::capacity() const [45] std::vector<Point, std::allocator<Point> >::begin() [73] bool std::operator< <float, float>(std::pair<float, float> const&, std::pair<float, float> const&)
  [34] std::vector<Point, std::allocator<Point> >::max_size() const [187] std::vector<Point, std::allocator<Point> >::clear() [76] std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
 [162] std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [188] void std::vector<Point, std::allocator<Point> >::assign<std::_Deque_iterator<Point, Point&, Point*>, void>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [148] std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long)
 [163] std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [63] std::vector<Point, std::allocator<Point> >::push_back(Point&&) [92] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
 [164] std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [88] std::vector<Point, std::allocator<Point> >::push_back(Point const&) [107] Convex::findConvexHull_using_deque()::{lambda(Point, Point)#1}::operator()(Point, Point) const (convex.cpp)
 [165] std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [89] std::vector<Point, std::allocator<Point> >::vector() [59] Convex::findConvexHull_using_deque()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const (convex.cpp)
 [166] std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [133] std::vector<Point, std::allocator<Point> >::vector(std::vector<Point, std::allocator<Point> > const&) [108] Convex::findConvexHull_using_vector()::{lambda(Point, Point)#1}::operator()(Point, Point) const (convex.cpp)
 [167] std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [72] std::vector<Point, std::allocator<Point> >::~vector() [60] Convex::findConvexHull_using_vector()::{lambda(Point const&, Point const&)#1}::operator()(Point const&, Point const&) const (convex.cpp)
 [168] std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [22] std::vector<Point, std::allocator<Point> >::operator[](unsigned long) [40] operator new(unsigned long, void*)
 [169] std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [134] int std::__bit_width<unsigned long>(unsigned long)
